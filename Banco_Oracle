# Projetos_Python
Códigos em python

# Sistemas
# Importar bibliotecas
import pandas as pd
import cx_Oracle
import datetime

usuario = 'reader' # usuário
senha = 'reader'   # senha
# Criar DSN
dsn_tns = cx_Oracle.makedsn(r'exd01-scan.magazineluiza.intranet', '1521', service_name='SVC_MLPEBS_ADMIN') # se necessário, coloque um 'r' antes de qualquer parâmetro para endereçar caracteres especiais como '\'

df = pd.read_sql_query('''SELECT 
     gjb.LAST_UPDATE_DATE                            AS DTINCLUSAO,
     gjl.period_name                                 AS PERIODO,
     gjl.ledger_id                                   AS LIVRO,
     gjl.effective_date                              AS DATA_EFETIVA,
     gjb.name                                        AS LOTE,
     gjl.status                                      AS STATUS,
     gjl.created_by                                  AS USUARIO,
     guser.user_name                                 AS USUARIO_LOGIN,
     guser.description                               AS USUARIO_NOME,
     gjs.user_je_source_name                         AS ORIGEM,
     gcc.segment1                                    AS EMPRESA,
     gcc.segment2                                    AS UNID_CONTAB, 
     gcc.segment3                                    AS CONTA, 
     gcc.segment4                                    AS UNID_NEGOC,     
     gcc.segment5                                    AS CENTRO_RESULT,
     gcc.segment6                                    AS LINHA_FAMILIA,
     gcc.segment7                                    AS PROJETO,
     0                                               AS F1,
     0                                               AS F2,
     nvl(gjl.entered_dr,0)                           AS DEBITO,
     nvl(gjl.entered_cr, 0)                          AS CREDITO,
     nvl(gjl.entered_dr,0) - nvl(gjl.entered_cr,0)   AS VALOR,
     gjl.description                                 AS DESCRICAO
     
     /*,CASE 
       WHEN LENGTH(TRIM(TRANSLATE(gjl.attribute13, '.+-0123456789', ' '))) IS NULL THEN
         TO_NUMBER(gjl.attribute13)
       ELSE
         NULL
     END CODFIL,
     CASE 
       WHEN LENGTH(TRIM(TRANSLATE(gjl.attribute16, '.+-0123456789', ' '))) IS NULL THEN
         TO_NUMBER(gjl.attribute16)
       ELSE
         NULL
     END TPNOTA,
     gjl.attribute15 AS SERIE,
     CASE 
       WHEN LENGTH(TRIM(TRANSLATE(gjl.attribute14, '.+-0123456789', ' '))) IS NULL THEN
         TO_NUMBER(gjl.attribute14)
       ELSE
         NULL
     END NUMNOTA,
     CASE
       WHEN INSTR(gjl.description, 'CFOP:', 1, 1) <> 0 THEN
         TO_NUMBER(REPLACE(REPLACE(SUBSTR(gjl.description, (INSTR(gjl.description, 'CFOP:', 1, 1)+ 5), 5), '/', ''), ' ', ''))
       ELSE
         NULL
     END CFOP,
     CASE
       WHEN INSTR(gjl.description, 'CFOP:', 1, 1) <> 0 THEN
         TO_NUMBER(REPLACE(REPLACE(SUBSTR(gjl.description, (INSTR(gjl.description, 'CFOP:', 1, 1)+ 5), 5), '/', ''), ' ', ''))
       ELSE
         NULL
     END CFOP_DIF*/
  
    from apps.gl_je_lines                gjl
    INNER JOIN apps.gl_code_combinations gcc ON gjl.code_combination_id   = gcc.code_combination_id
    INNER JOIN apps.gl_je_headers        gjh ON gjl.je_header_id          = gjh.je_header_id
    INNER JOIN apps.gl_je_batches        gjb ON gjh.je_batch_id           = gjb.je_batch_id
    INNER JOIN apps.gl_je_sources        gjs ON gjh.je_source             = gjs.je_source_name
    INNER JOIN apps.gl_je_categories     gjc ON gjh.je_category           = gjc.je_category_name
    LEFT JOIN  APPLSYS.FND_USER          guser ON guser.user_id           = gjl.created_by   
               
    where gjb.actual_flag           = 'A'
    and gjl.ledger_id             = '2022'
     
     --and gjl.effective_date        BETWEEN TRUNC(TRUNC(SYSDATE, 'month')-1, 'month') AND LAST_DAY(TRUNC(TRUNC(SYSDATE, 'month')-1, 'month'))
     --and gjl.effective_date        BETWEEN TO_DATE('01/01/2020') AND TO_DATE('31/01/2020')

     and gjl.period_name IN ('03-20')
     AND GCC.SEGMENT3  IN ('3313010010') 
     --AND GCC.SEGMENT4  IN ('0200','0660','0204')''',conn ) # use aspas triplas se desejar espalhar sua consulta por várias linhas

df.head(3)   # Visualização tabela
